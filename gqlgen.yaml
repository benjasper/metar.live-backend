schema:
  - ent.graphql
  - graph/schema.queries.graphql
  - graph/schema.models.graphql
  - graph/schema.units.graphql

# resolver reports where the resolver implementations go.
resolver:
  layout: follow-schema
  dir: graph
  package: graph

exec:
  layout: follow-schema
  dir: graph/generated
  package: generated

model:
  filename: graph/model/models_gen.go
  package: model


# autobind tells gqlgen to search for any type names in the GraphQL schema in the
# provided Go package. If they match it will use them, otherwise it will generate new ones.
autobind:
  - metar.live/ent

# This section declares type mapping between the GraphQL and Go type systems.
models:
  # Defines the ID field as Go 'int'.
  ID:
    model:
      - metar.live/graph/model.UUID
  Time:
    model:
      - github.com/99designs/gqlgen/graphql.Time
  # Map the Status type that was defined in the schema
  Runway:
    model:
      - metar.live/ent.Runway
  Airport:
    model:
      - metar.live/ent.Airport
